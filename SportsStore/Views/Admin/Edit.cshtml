@model Product

@{
    ViewBag.Title = "Редактирование товара";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<form asp-action="Edit" method="post" id="formEdit">
    <input type="hidden" asp-for="ProductID" />
    <div class="form-group">
        <div><span asp-validation-for="Name" class="text-danger"></span></div>
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group">
        <div><span asp-validation-for="Description" class="text-danger"></span></div>
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <div><span asp-validation-for="Category" class="text-danger"></span></div>
        <label asp-for="Category"></label>
        <select asp-for="Category" asp-items="@ViewBag.listCategory" class="form-control"></select>
    </div>
    <div class="form-group">
        <div><span asp-validation-for="Price" class="text-danger"></span></div>
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" />
    </div>
    <div class="text-center">
        <button class="btn btn-primary" type="submit">Save</button>
        <a asp-action="Index" class="btn btn-default">Cancel</a>
    </div>
</form>

<script>
    // переопределение валидации на стороне клиента
    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
</script>
